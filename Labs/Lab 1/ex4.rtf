{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red239\green239\blue239;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c94902\c94902\c94902;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 \expnd0\expndtw0\kerning0
import numpy as np\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 import numpy.linalg as la\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 import math\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 def driver():\cb1 	\
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	y = [1, 0]\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	w = [0, 1]\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	# evaluate the dot product of y and w\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	dp = dotProduct(y,w,n)\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	# print the output\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	print(\'92the dot product is : \'92, dp)\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	return\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 def dotProduct(x,y,n):\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	#\cb1  \cb2 Computes the dot product of the n x 1 vectors x and y\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	dp = 0.\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	for j in range(n):\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	dp = dp + x[j]*y[j]\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 	return dp\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs32 \cf0 \
\pard\pardeftab720\partightenfactor0

\f0\fs32\fsmilli16364 \cf0 \cb2 driver()}